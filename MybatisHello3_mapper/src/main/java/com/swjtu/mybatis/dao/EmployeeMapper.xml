<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swjtu.mybatis.dao.EmployeeMapper">
<!-- 
namespace:名称空间;指定为接口的全类名 
id：唯一标识
resultType：返回值类型
#{id}：从传递过来的参数中取出id值

public Employee getEmpById(Integer id);
 -->
 	<!-- 多条记录封装一个map：Map<Integer,Employee>:键是这条记录的主键，值是记录封装后的javaBean -->
 	<!-- public Map<String, Employee> getEmpByLastNameLikeReturnMap(String lastName); -->
 	<select id="getEmpByLastNameLikeReturnMap" resultType="map">
 		SELECT id AS ID
		       , last_name AS LASTNAME
		       , email AS EMAIL
		       , gender AS GENDER
		  FROM emp_tbl 
		 WHERE last_name like #{lastName}
 	</select>
 	
 	<!-- public List<Employee> getEmpListByLastNameReturnListMap(String lastName);  -->
 	<!-- 返回结果是 List<Map> -->
 	<select id="getEmpListByLastNameReturnListMap" resultType="map">
 		SELECT id AS ID
		       , last_name AS LASTNAME
		       , email AS EMAIL
		       , gender AS GENDER
		  FROM emp_tbl 
		 WHERE last_name like #{lastName}
 	</select>	
 
 
 	<!-- 测试返回一条记录的map public Map<String, Object> getEmpByIdReturnMap(int id);  -->
 	<select id="getEmpByIdReturnMap" resultType="map">
 		SELECT id AS ID
		       , last_name AS LASTNAME
		       , email AS EMAIL
		       , gender AS GENDER
		  FROM emp_tbl 
		 WHERE id = #{id}
 	</select>	
 	
 	<!-- public List<Employee> getEmpListByLastName(String lastName);  -->
 	<!-- resultType 如果返回的是一个集合，要写集合中元素的类型 -->
 	<select id="getEmpListByLastName" resultType="com.swjtu.mybatis.bean.Employee">
 		SELECT id AS ID
		       , last_name AS LASTNAME
		       , email AS EMAIL
		       , gender AS GENDER
		  FROM emp_tbl 
		 WHERE last_name like #{lastName}
 	</select>	
 
	<select id="getEmployeeId" resultType="emp">
		SELECT id AS ID
		       , last_name AS LASTNAME
		       , email AS EMAIL
		       , gender AS GENDER
		  FROM emp_tbl 
		 WHERE id = #{abc}
	</select>
	
	<!-- 添加一个员工  public void addEmp(Employee e);  -->
	<!-- 
		如何获取自增主键的值：
		mysql 支持自增主键，自增主键值得获取，mybatis 也是利用 statement.getGeneratedKeys()：
		useGeneratedKeys="true" 使用自增主键获取主键值策略，
		keyProperty: 指定对应的主键属性，也就是mybatis获取到主键以后，将这个值封装给java bean的那个属性； 
	 -->
	<insert id="addEmp" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO emp_tbl ( last_name
		       , gender
		       , email
	         ) VALUES ( #{lastName}
	           , #{gender}
	           , #{email}
            ) 
	</insert>
	
	<!-- 更新一个员工  public void updateEmp(Employee e) -->
	<update id="updateEmp">
		UPDATE emp_tbl
		   SET last_name = #{lastName}
		       , gender = #{gender}
		       , email = #{email}
		 WHERE id = #{id}
	</update>
	
	
	<!-- 删除一个员工  public void deleteEmp(Integer id) -->
	<delete id="deleteEmp">
		DELETE 
		  FROM emp_tbl 
		 WHERE id = #{id} 
	</delete>
	
	
	<!-- 根据id和lastName查询员工 -->
	<select id="getEmpByIdAndLastName" resultType="com.swjtu.mybatis.bean.Employee">
		SELECT id AS ID
		       , last_name AS LASTNAME
		       , email AS EMAIL
		       , gender AS GENDER
		  FROM emp_tbl 
		 WHERE id = #{id}
		   and last_name = #{lastName}
	</select>
	
	<!-- 根据 map 查询员工 -->
	<select id="getEmpByMap" resultType="com.swjtu.mybatis.bean.Employee">
		SELECT id AS ID
		       , last_name AS LASTNAME
		       , email AS EMAIL
		       , gender AS GENDER
		  FROM ${TABLE_NAME} 
		 WHERE id = ${ID}
		   and last_name = #{LAST_NAME}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>